{"version":3,"sources":["components/NewContact/styles.module.css","types.ts","hooks/useTypedSelector.ts","api/fakeFetch.ts","store/actionCreators/contacts.ts","components/ContactsTable/ContactsTable.tsx","components/NewContact/NewContact.tsx","App.tsx","store/reducers/contactsReducer.ts","store/index.ts","index.tsx"],"names":["module","exports","contactsActionsTypes","useTypedSelector","useSelector","fakeFetch","a","Promise","resolve","setTimeout","name","lastname","age","pager","ContactsTable","contacts","state","dispatch","useDispatch","useEffect","type","FETCH_CONTACTS","localState","localStorage","getItem","response","setItem","JSON","stringify","parse","FETCH_CONTACTS_SUCCESS","payload","length","TableContainer","Table","TableHead","TableRow","TableCell","TableBody","map","contact","LinearProgress","NewContact","useState","inputsState","setInputsState","handleChange","event","prevState","target","value","className","styles","form","onSubmit","preventDefault","getState","ADD_CONTACT","Grid","container","spacing","item","direction","TextField","required","label","placeholder","onChange","justifyContent","Button","variant","color","App","Container","md","xs","initialState","isLoading","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6f84308b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__2MJ33\"};","export interface IContact {\r\n  name: string\r\n  lastname: string\r\n  age: number\r\n  pager: number\r\n}\r\n\r\n\r\n//contact reducer\r\n\r\nexport interface IState {\r\n  contacts: IContact[]\r\n  isLoading: boolean\r\n}\r\n\r\nexport enum contactsActionsTypes {\r\n  FETCH_CONTACTS = \"FETCH_CONTACTS\",\r\n  FETCH_CONTACTS_SUCCESS = \"FETCH_CONTACTS_SUCCESS\",\r\n  ADD_CONTACT = \"ADD_CONTACT\",\r\n}\r\n\r\ninterface fetchContacts {\r\n  type: contactsActionsTypes.FETCH_CONTACTS\r\n}\r\n\r\ninterface fetchContactsSuccess {\r\n  type: contactsActionsTypes.FETCH_CONTACTS_SUCCESS\r\n  payload: IContact[]\r\n}\r\n\r\ninterface addContact {\r\n  type: contactsActionsTypes.ADD_CONTACT\r\n  payload: IContact\r\n}\r\n\r\nexport type ContactsAction = fetchContacts | fetchContactsSuccess | addContact\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { TContactsReducer } from \"../store/reducers/contactsReducer\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<TContactsReducer> = useSelector;\r\n","import { IContact } from \"../types\";\r\n\r\n//simulates that data isn`t loaded instantly\r\nexport const fakeFetch = async (): Promise<IContact[]> => {\r\n  await new Promise(resolve => setTimeout(resolve, 1500));\r\n\r\n  return [{\r\n    name: \"John\",\r\n    lastname: \"Dorian\",\r\n    age: 27,\r\n    pager: 926545\r\n  },\r\n  {\r\n    name: \"Carla\",\r\n    lastname: \"Espinosa\",\r\n    age: 28,\r\n    pager: 945455\r\n  },\r\n  {\r\n    name: \"Perry\",\r\n    lastname: \"Cox\",\r\n    age: 40,\r\n    pager: 955654\r\n  },\r\n  {\r\n    name: \"Robert\",\r\n    lastname: \"Celso\",\r\n    age: 58,\r\n    pager: 128215\r\n  }]\r\n}\r\n","import { Dispatch } from 'redux';\r\nimport { fakeFetch } from '../../api/fakeFetch';\r\nimport { ContactsAction, contactsActionsTypes, IContact } from './../../types';\r\n\r\n\r\nexport const fetchContacts = () => {\r\n  return async (dispatch: Dispatch<ContactsAction>) => {\r\n    dispatch({ type: contactsActionsTypes.FETCH_CONTACTS });\r\n\r\n    const localState = localStorage.getItem('contactsState');\r\n    let response;\r\n\r\n    if (!localState) {\r\n      response = await fakeFetch();\r\n      localStorage.setItem('contactsState', JSON.stringify(response));\r\n\r\n    } else {\r\n      response = JSON.parse(localState);\r\n    }\r\n\r\n    dispatch({ type: contactsActionsTypes.FETCH_CONTACTS_SUCCESS, payload: response });\r\n  }\r\n}\r\n\r\n\r\nexport const addContact = (payload: IContact) => {\r\n  return (dispatch: Dispatch<ContactsAction>, getState: any) => {\r\n    localStorage.setItem('contactsState', JSON.stringify([...getState().contacts, payload]));\r\n    dispatch({ type: contactsActionsTypes.ADD_CONTACT, payload });\r\n  }\r\n}","import { FC, useEffect } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\r\nimport { fetchContacts } from \"../../store/actionCreators/contacts\";\r\n\r\nimport { Table, TableContainer, TableHead, TableRow, TableCell, TableBody, LinearProgress } from \"@material-ui/core\";\r\n\r\nexport const ContactsTable: FC = () => {\r\n  const contacts = useTypedSelector(state => state.contacts);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {(!!contacts.length\r\n        ? <TableContainer>\r\n          <Table>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>First Name</TableCell>\r\n                <TableCell>Last Name</TableCell>\r\n                <TableCell>Age</TableCell>\r\n                <TableCell>Pager</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {contacts?.map(contact => {\r\n                return (\r\n                  <TableRow key={contact.pager}>\r\n                    <TableCell>\r\n                      {contact.name}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {contact.lastname}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {contact.age}\r\n                    </TableCell>\r\n                    <TableCell>\r\n                      {contact.pager}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n\r\n        : <LinearProgress />\r\n      )}\r\n    </>\r\n\r\n\r\n\r\n  )\r\n}","import { FC, useState } from \"react\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addContact } from \"../../store/actionCreators/contacts\";\r\n\r\nimport { Button, Grid, TextField } from \"@material-ui/core\";\r\n\r\nimport styles from './styles.module.css';\r\n\r\n\r\nexport const NewContact: FC = () => {\r\n\r\n  const [inputsState, setInputsState] = useState({\r\n    name: '',\r\n    lastname: '',\r\n    age: '',\r\n    pager: ''\r\n  });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (event: React.SyntheticEvent) => {\r\n    event.preventDefault();\r\n\r\n    dispatch(addContact({\r\n      name: inputsState.name,\r\n      lastname: inputsState.lastname,\r\n      age: +inputsState.age,\r\n      pager: +inputsState.pager\r\n    }));\r\n\r\n    setInputsState({\r\n      name: '',\r\n      lastname: '',\r\n      age: '',\r\n      pager: ''\r\n    });\r\n\r\n  }\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInputsState((prevState) => ({\r\n      ...prevState, [event.target.name]: event.target.value\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={submitHandler}>\r\n      <Grid container spacing={2}>\r\n\r\n        <Grid item container direction=\"column\">\r\n          <TextField\r\n            required\r\n            label=\"First Name\"\r\n            placeholder=\"First Name\"\r\n            name=\"name\"\r\n            value={inputsState.name}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            required\r\n            label=\"Last Name\"\r\n            placeholder=\"Last Name\"\r\n            name=\"lastname\"\r\n            value={inputsState.lastname}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            required\r\n            label=\"Age\"\r\n            placeholder=\"Age\"\r\n            type=\"number\"\r\n            name=\"age\"\r\n            value={inputsState.age}\r\n            onChange={handleChange}\r\n          />\r\n          <TextField\r\n            required\r\n            label=\"Pager\"\r\n            placeholder=\"Pager\"\r\n            type=\"number\"\r\n            name=\"pager\"\r\n            value={inputsState.pager}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n\r\n        <Grid item container justifyContent=\"center\">\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Add\r\n          </Button>\r\n        </Grid>\r\n        \r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n","import { Container, Grid } from '@material-ui/core';\nimport React from 'react';\nimport { ContactsTable } from './components/ContactsTable/ContactsTable';\nimport { NewContact } from './components/NewContact/NewContact';\n\nfunction App() {\n  return (\n    <Container>\n      <Grid container spacing={2}>\n        <Grid item md={4} container justifyContent=\"center\">\n          <NewContact />\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <ContactsTable />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\n\nexport default App;\n","import { IState, ContactsAction, contactsActionsTypes } from './../../types';\r\n\r\nconst initialState: IState = {\r\n  contacts: [],\r\n  isLoading: false,\r\n};\r\n\r\nexport const contactsReducer = (state = initialState, action: ContactsAction): IState => {\r\n  switch (action.type) {\r\n    case contactsActionsTypes.FETCH_CONTACTS:\r\n      return { ...state, isLoading: true };\r\n\r\n    case contactsActionsTypes.FETCH_CONTACTS_SUCCESS:\r\n      return { contacts: action.payload, isLoading: false };\r\n\r\n    case contactsActionsTypes.ADD_CONTACT:\r\n      return { ...state, contacts: [...state.contacts, action.payload] };\r\n\r\n    default: return state;\r\n  }\r\n};\r\n\r\nexport type TContactsReducer = ReturnType<typeof contactsReducer>;\r\n","import { contactsReducer } from './reducers/contactsReducer';\r\nimport { applyMiddleware, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(contactsReducer, applyMiddleware(thunk));\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './store';\n\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}